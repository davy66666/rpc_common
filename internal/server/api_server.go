// Code generated by goctl. DO NOT EDIT.
// Source: api.proto

package server

import (
	"context"

	"ks_api_service/internal/logic"
	"ks_api_service/internal/svc"
	"ks_api_service/pb/api"
)

type ApiServer struct {
	svcCtx *svc.ServiceContext
	api.UnimplementedApiServer
}

func NewApiServer(svcCtx *svc.ServiceContext) *ApiServer {
	return &ApiServer{
		svcCtx: svcCtx,
	}
}

// 增加新的账变
func (s *ApiServer) AddTransaction(ctx context.Context, in *api.AddTransactionReq) (*api.AddTransactionResp, error) {
	l := logic.NewAddTransactionLogic(ctx, s.svcCtx)
	return l.AddTransaction(in)
}

// GetRWByTime
func (s *ApiServer) GetRwbyTime(ctx context.Context, in *api.GetRwbyTimeReq) (*api.GetRwbyTimeResp, error) {
	l := logic.NewGetRwbyTimeLogic(ctx, s.svcCtx)
	return l.GetRwbyTime(in)
}

// GetLastWithdrawal
func (s *ApiServer) GetLastWithdrawal(ctx context.Context, in *api.GetLastWithdrawalReq) (*api.GetLastWithdrawalResp, error) {
	l := logic.NewGetLastWithdrawalLogic(ctx, s.svcCtx)
	return l.GetLastWithdrawal(in)
}

// GetTransfer
func (s *ApiServer) GetTransfer(ctx context.Context, in *api.GetTransferReq) (*api.GetTransferResp, error) {
	l := logic.NewGetTransferLogic(ctx, s.svcCtx)
	return l.GetTransfer(in)
}

// GetTransListByTransFatherId
func (s *ApiServer) GetTransListByTransFatherId(ctx context.Context, in *api.GetTransListByTransFatherIdReq) (*api.GetTransListByTransFatherIdResp, error) {
	l := logic.NewGetTransListByTransFatherIdLogic(ctx, s.svcCtx)
	return l.GetTransListByTransFatherId(in)
}

// GetTransListByTransFatherId
func (s *ApiServer) TransUserCountByUserIds(ctx context.Context, in *api.TransUserCountByUserIdsReq) (*api.TransUserCountByUserIdsResp, error) {
	l := logic.NewTransUserCountByUserIdsLogic(ctx, s.svcCtx)
	return l.TransUserCountByUserIds(in)
}
