// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import "database/sql"

const TableNameOfflinePay = "offline_pays"

// OfflinePay mapped from table <offline_pays>
type OfflinePay struct {
	ID              int64         `gorm:"column:id;type:int unsigned;primaryKey;autoIncrement:true" json:"id" db:"id"`
	PayType         string        `gorm:"column:pay_type;type:varchar(100);not null;default:'';comment:pay_types表中的en_name" json:"pay_type" db:"pay_type"`       // pay_types表中的en_name
	PayCode         string        `gorm:"column:pay_code;type:varchar(50);not null;default:'';comment:银行简称" json:"pay_code" db:"pay_code"`                       // 银行简称
	PayName         string        `gorm:"column:pay_name;type:varchar(100);not null;default:'';comment:银行名称" json:"pay_name" db:"pay_name"`                      // 银行名称
	Username        string        `gorm:"column:username;type:varchar(100);not null;default:'';comment:姓名" json:"username" db:"username"`                        // 姓名
	Account         string        `gorm:"column:account;type:varchar(100);not null;default:'';comment:银行卡号码" json:"account" db:"account"`                        // 银行卡号码
	Address         *string       `gorm:"column:address;type:varchar(100);comment:分行地址" json:"address" db:"address"`                                             // 分行地址
	PayLevel        *string       `gorm:"column:pay_level;type:varchar(255);comment:支付类别 多个以逗号分隔" json:"pay_level" db:"pay_level"`                               // 支付类别 多个以逗号分隔
	IsSaoma         *int64        `gorm:"column:is_saoma;type:tinyint;comment:0:否 1:扫码" json:"is_saoma" db:"is_saoma"`                                           // 0:否 1:扫码
	ImgPath         *string       `gorm:"column:img_path;type:varchar(100);comment:图片路径" json:"img_path" db:"img_path"`                                          // 图片路径
	Platform        *string       `gorm:"column:platform;type:varchar(255);default:1,4;comment:支付开放的支付平台,1:手机端;4:pc端" json:"platform" db:"platform"`             // 支付开放的支付平台,1:手机端;4:pc端
	MinMoney        *float64      `gorm:"column:min_money;type:decimal(12,2);comment:支付最小金额" json:"min_money" db:"min_money"`                                    // 支付最小金额
	MaxMoney        *float64      `gorm:"column:max_money;type:decimal(12,2);comment:支付最大金额" json:"max_money" db:"max_money"`                                    // 支付最大金额
	IsRange         *int64        `gorm:"column:is_range;type:tinyint;default:1;comment:是否是范围0:否；1：是" json:"is_range" db:"is_range"`                             // 是否是范围0:否；1：是
	ExRate          *float64      `gorm:"column:ex_rate;type:decimal(8,2);default:1.00;comment:虚拟货币汇率" json:"ex_rate" db:"ex_rate"`                              // 虚拟货币汇率
	QuickAmount     *string       `gorm:"column:quick_amount;type:varchar(255);comment:存款金额:多个值,则用逗号隔开" json:"quick_amount" db:"quick_amount"`                   // 存款金额:多个值,则用逗号隔开
	AdminUser       *string       `gorm:"column:admin_user;type:varchar(255);comment:编辑者" json:"admin_user" db:"admin_user"`                                     // 编辑者
	Remark          *string       `gorm:"column:remark;type:varchar(255);comment:备注" json:"remark" db:"remark"`                                                  // 备注
	Sort            *int64        `gorm:"column:sort;type:int;comment:排序" json:"sort" db:"sort"`                                                                 // 排序
	BetAmountRate   *int64        `gorm:"column:bet_amount_rate;type:int unsigned;default:1;comment:打码量倍数" json:"bet_amount_rate" db:"bet_amount_rate"`          // 打码量倍数
	BankType        *int64        `gorm:"column:bank_type;type:tinyint;default:1;comment:1:银行卡, 2:数字钱包" json:"bank_type" db:"bank_type"`                         // 1:银行卡, 2:数字钱包
	IsThird         *int64        `gorm:"column:is_third;type:tinyint;comment:是否是第三方支付0:否；1：是" json:"is_third" db:"is_third"`                                    // 是否是第三方支付0:否；1：是
	IsOpen          *int64        `gorm:"column:is_open;type:tinyint;default:1;comment:是否开启0:否;1:是" json:"is_open" db:"is_open"`                                 // 是否开启0:否;1:是
	IsMatchFastPay  *int64        `gorm:"column:is_match_fast_pay;type:tinyint;comment:是否匹配极速充值：0否，1是；只支持银行卡类型" json:"is_match_fast_pay" db:"is_match_fast_pay"` // 是否匹配极速充值：0否，1是；只支持银行卡类型
	IsLastMatch     *int64        `gorm:"column:is_last_match;type:tinyint;comment:是否是最后一次匹配的银行卡：0否，1是；轮询匹配机制" json:"is_last_match" db:"is_last_match"`          // 是否是最后一次匹配的银行卡：0否，1是；轮询匹配机制
	CreatedAt       *sql.NullTime `gorm:"column:created_at;type:bigint;autoCreateTime:milli" json:"created_at" db:"created_at"`
	UpdatedAt       *sql.NullTime `gorm:"column:updated_at;type:bigint;autoUpdateTime:milli" json:"updated_at" db:"updated_at"`
	CompanyDiscount *float64      `gorm:"column:company_discount;type:decimal(8,2);default:0.00;comment:公司入款优惠比例" json:"company_discount" db:"company_discount"` // 公司入款优惠比例
	UsdtDiscount    *float64      `gorm:"column:usdt_discount;type:decimal(8,2);default:0.00;comment:usdt入款优惠比例" json:"usdt_discount" db:"usdt_discount"`        // usdt入款优惠比例
}

// TableName OfflinePay's table name
func (*OfflinePay) TableName() string {
	return TableNameOfflinePay
}
