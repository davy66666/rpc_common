// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"database/sql"
	"time"
)

const TableNameGameMatch = "game_match"

// GameMatch 游戏争霸赛表
type GameMatch struct {
	ID                    int64         `gorm:"column:id;type:bigint unsigned;primaryKey;autoIncrement:true" json:"id" db:"id"`
	MatchName             string        `gorm:"column:match_name;type:varchar(255);not null;index:game_match_match_name_index,priority:1;default:'';comment:比赛名称" json:"match_name" db:"match_name"`                          // 比赛名称
	GameCode              string        `gorm:"column:game_code;type:varchar(50);not null;default:'';comment:游戏类型" json:"game_code" db:"game_code"`                                                                           // 游戏类型
	StartAt               *sql.NullTime `gorm:"column:start_at;type:datetime;index:game_match_start_at_index,priority:1;comment:比赛开始时间" json:"start_at" db:"start_at"`                                                        // 比赛开始时间
	EndAt                 *sql.NullTime `gorm:"column:end_at;type:datetime;index:game_match_end_at_index,priority:1;comment:比赛结束时间" json:"end_at" db:"end_at"`                                                                // 比赛结束时间
	Image                 string        `gorm:"column:image;type:varchar(255);not null;default:'';comment:比赛图片" json:"image" db:"image"`                                                                                      // 比赛图片
	DetailImage           string        `gorm:"column:detail_image;type:varchar(255);not null;default:'';comment:APP/H5详情图片" json:"detail_image" db:"detail_image"`                                                           // APP/H5详情图片
	PcDetailImage         string        `gorm:"column:pc_detail_image;type:varchar(255);not null;default:'';comment:PC详情图片" json:"pc_detail_image" db:"pc_detail_image"`                                                      // PC详情图片
	BetNums               int64         `gorm:"column:bet_nums;type:int;not null;default:0;comment:注单量" json:"bet_nums" db:"bet_nums"`                                                                                        // 注单量
	BetAmount             *float64      `gorm:"column:bet_amount;type:decimal(12,2);default:0.00;comment:用户投注金额 包括无效金额" json:"bet_amount" db:"bet_amount"`                                                                    // 用户投注金额 包括无效金额
	ValidBetAmount        float64       `gorm:"column:valid_bet_amount;type:decimal(12,2);not null;default:0.00;comment:有效投注金额" json:"valid_bet_amount" db:"valid_bet_amount"`                                                // 有效投注金额
	NetAmount             float64       `gorm:"column:net_amount;type:decimal(12,2);not null;default:0.00;comment:玩家的所赢金额" json:"net_amount" db:"net_amount"`                                                                 // 玩家的所赢金额
	EntryCondStatus       int64         `gorm:"column:entry_cond_status;type:tinyint;not null;default:0;comment:比赛门槛状态[0:关闭,1:开启]" json:"entry_cond_status" db:"entry_cond_status"`                                           // 比赛门槛状态[0:关闭,1:开启]
	CondValidBetStartAt   *time.Time    `gorm:"column:cond_valid_bet_start_at;type:date;comment:比赛门槛：有效投注抓取开始周期，为NULL则表示不限制" json:"cond_valid_bet_start_at" db:"cond_valid_bet_start_at"`                                     // 比赛门槛：有效投注抓取开始周期，为NULL则表示不限制
	CondValidBetEndAt     *time.Time    `gorm:"column:cond_valid_bet_end_at;type:date;comment:比赛门槛：有效投注抓取结束周期，为NULL则表示不限制" json:"cond_valid_bet_end_at" db:"cond_valid_bet_end_at"`                                           // 比赛门槛：有效投注抓取结束周期，为NULL则表示不限制
	CondValidBetGameCodes *string       `gorm:"column:cond_valid_bet_game_codes;type:varchar(500);comment:比赛门槛：可参与计算有效投注的游戏gameCode，可填写多个，使用英文逗号分隔，例如：PG,KY" json:"cond_valid_bet_game_codes" db:"cond_valid_bet_game_codes"` // 比赛门槛：可参与计算有效投注的游戏gameCode，可填写多个，使用英文逗号分隔，例如：PG,KY
	CondValidBetAmount    float64       `gorm:"column:cond_valid_bet_amount;type:decimal(12,2);not null;default:0.00;comment:比赛门槛：最低有效投注" json:"cond_valid_bet_amount" db:"cond_valid_bet_amount"`                            // 比赛门槛：最低有效投注
	IsEnable              int64         `gorm:"column:is_enable;type:tinyint;not null;index:game_match_is_enable_index,priority:1;default:1;comment:是否上架[0:关闭,1:开启]" json:"is_enable" db:"is_enable"`                         // 是否上架[0:关闭,1:开启]
	Sort                  int64         `gorm:"column:sort;type:int unsigned;not null;default:0;comment:排序 从大到小" json:"sort" db:"sort"`                                                                                       // 排序 从大到小
	AdminID               *int64        `gorm:"column:admin_id;type:int;comment:操作员ID" json:"admin_id" db:"admin_id"`                                                                                                         // 操作员ID
	AdminName             string        `gorm:"column:admin_name;type:varchar(255);not null;default:'';comment:操作管理员" json:"admin_name" db:"admin_name"`                                                                      // 操作管理员
	CreatedAt             *sql.NullTime `gorm:"column:created_at;type:bigint;autoCreateTime:milli" json:"created_at" db:"created_at"`
	UpdatedAt             *sql.NullTime `gorm:"column:updated_at;type:bigint;autoUpdateTime:milli" json:"updated_at" db:"updated_at"`
	IsDelete              int64         `gorm:"column:is_delete;type:tinyint;not null;default:0;comment:是否删除 0:未删除 1:删除" json:"is_delete" db:"is_delete"`                 // 是否删除 0:未删除 1:删除
	LastAdminName         string        `gorm:"column:last_admin_name;type:varchar(255);not null;default:'';comment:最后操作管理员" json:"last_admin_name" db:"last_admin_name"` // 最后操作管理员
}

// TableName GameMatch's table name
func (*GameMatch) TableName() string {
	return TableNameGameMatch
}
