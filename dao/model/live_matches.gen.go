// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import "database/sql"

const TableNameLiveMatch = "live_matches"

// LiveMatch 直播比赛信息表
type LiveMatch struct {
	ID                  int64         `gorm:"column:id;type:bigint unsigned;primaryKey;autoIncrement:true" json:"id" db:"id"`
	MatchID             *int64        `gorm:"column:matchId;type:int;uniqueIndex:live_matches_matchId_unique,priority:1;comment:比赛ID" json:"matchId" db:"matchId"`                                                 // 比赛ID
	GameID              *int64        `gorm:"column:gameId;type:int;index:live_matches_gameId_index,priority:1;comment:游戏ID：201 篮球，202 足球" json:"gameId" db:"gameId"`                                              // 游戏ID：201 篮球，202 足球
	GameIcon            *string       `gorm:"column:gameIcon;type:varchar(512);comment:游戏icon" json:"gameIcon" db:"gameIcon"`                                                                                      // 游戏icon
	SeriesID            *int64        `gorm:"column:seriesId;type:int;comment:赛事ID" json:"seriesId" db:"seriesId"`                                                                                                 // 赛事ID
	SeriesName          *string       `gorm:"column:seriesName;type:varchar(255);comment:赛事名称" json:"seriesName" db:"seriesName"`                                                                                  // 赛事名称
	SeriesLogo          *string       `gorm:"column:seriesLogo;type:varchar(512);comment:赛事Logo" json:"seriesLogo" db:"seriesLogo"`                                                                                // 赛事Logo
	LeagueID            *int64        `gorm:"column:leagueId;type:int;comment:联赛ID" json:"leagueId" db:"leagueId"`                                                                                                 // 联赛ID
	LeagueName          *string       `gorm:"column:leagueName;type:varchar(255);comment:联赛名称" json:"leagueName" db:"leagueName"`                                                                                  // 联赛名称
	LeagueLogo          *string       `gorm:"column:leagueLogo;type:varchar(512);comment:联赛Logo" json:"leagueLogo" db:"leagueLogo"`                                                                                // 联赛Logo
	LeagueLevel         *int64        `gorm:"column:leagueLevel;type:int;comment:联赛等级" json:"leagueLevel" db:"leagueLevel"`                                                                                        // 联赛等级
	Bo                  *int64        `gorm:"column:bo;type:int;comment:赛制" json:"bo" db:"bo"`                                                                                                                     // 赛制
	Status              *int64        `gorm:"column:status;type:tinyint;index:live_matches_status_index,priority:1;comment:比赛状态：1-upcoming(未开始)  2-live(进行中) 3-past(已结束) 4-cancel(已取消)" json:"status" db:"status"` // 比赛状态：1-upcoming(未开始)  2-live(进行中) 3-past(已结束) 4-cancel(已取消)
	State               *int64        `gorm:"column:state;type:int;comment:比赛节点（体育专用）" json:"state" db:"state"`                                                                                                    // 比赛节点（体育专用）
	Finished            *int64        `gorm:"column:finished;type:tinyint;comment:小局是否完成" json:"finished" db:"finished"`                                                                                           // 小局是否完成
	StartTime           *int64        `gorm:"column:startTime;type:int;index:live_matches_startTime_index,priority:1;comment:开始时间" json:"startTime" db:"startTime"`                                                // 开始时间
	GameTime            *int64        `gorm:"column:gameTime;type:int;comment:当前游戏时间（单位：秒，非正在比赛的值为0）" json:"gameTime" db:"gameTime"`                                                                               // 当前游戏时间（单位：秒，非正在比赛的值为0）
	BpPhase             *int64        `gorm:"column:bpPhase;type:tinyint;comment:是否Bp阶段（目前用于dota2）" json:"bpPhase" db:"bpPhase"`                                                                                   // 是否Bp阶段（目前用于dota2）
	Round               *int64        `gorm:"column:round;type:int;comment:当前第几局（非正在比赛值为0）" json:"round" db:"round"`                                                                                               // 当前第几局（非正在比赛值为0）
	RoundNum            *int64        `gorm:"column:roundNum;type:int;comment:当前回合（CS:GO）" json:"roundNum" db:"roundNum"`                                                                                          // 当前回合（CS:GO）
	WinTeam             *int64        `gorm:"column:winTeam;type:int;comment:获胜队伍ID（未结束的比赛值为null）" json:"winTeam" db:"winTeam"`                                                                                    // 获胜队伍ID（未结束的比赛值为null）
	Home                *int64        `gorm:"column:home;type:int;comment:主队ID" json:"home" db:"home"`                                                                                                             // 主队ID
	HomeName            *string       `gorm:"column:homeName;type:varchar(255);comment:主队简称" json:"homeName" db:"homeName"`                                                                                        // 主队简称
	HomeScore           *int64        `gorm:"column:homeScore;type:int;comment:主队得分" json:"homeScore" db:"homeScore"`                                                                                              // 主队得分
	HomeLogo            *string       `gorm:"column:homeLogo;type:varchar(512);comment:主队Logo" json:"homeLogo" db:"homeLogo"`                                                                                      // 主队Logo
	HomeKill            *int64        `gorm:"column:homeKill;type:int;comment:主队击杀（非正在比赛值为0）" json:"homeKill" db:"homeKill"`                                                                                       // 主队击杀（非正在比赛值为0）
	HomeWinRate         *float64      `gorm:"column:homeWinRate;type:decimal(5,2);comment:主队胜率" json:"homeWinRate" db:"homeWinRate"`                                                                               // 主队胜率
	Away                *int64        `gorm:"column:away;type:int;comment:客队ID" json:"away" db:"away"`                                                                                                             // 客队ID
	AwayName            *string       `gorm:"column:awayName;type:varchar(255);comment:客队简称" json:"awayName" db:"awayName"`                                                                                        // 客队简称
	AwayScore           *int64        `gorm:"column:awayScore;type:int;comment:客队得分" json:"awayScore" db:"awayScore"`                                                                                              // 客队得分
	AwayLogo            *string       `gorm:"column:awayLogo;type:varchar(512);comment:客队Logo" json:"awayLogo" db:"awayLogo"`                                                                                      // 客队Logo
	AwayKill            *int64        `gorm:"column:awayKill;type:int;comment:客队击杀（非正在比赛值为0）" json:"awayKill" db:"awayKill"`                                                                                       // 客队击杀（非正在比赛值为0）
	AwayWinRate         *float64      `gorm:"column:awayWinRate;type:decimal(5,2);comment:客队胜率" json:"awayWinRate" db:"awayWinRate"`                                                                               // 客队胜率
	HasPro              *int64        `gorm:"column:hasPro;type:tinyint;comment:是否有Pro数据（进行中跟未开始）" json:"hasPro" db:"hasPro"`                                                                                      // 是否有Pro数据（进行中跟未开始）
	IsAttention         *int64        `gorm:"column:isAttention;type:tinyint;comment:是否关注（true-已关注，false-未关注）" json:"isAttention" db:"isAttention"`                                                                // 是否关注（true-已关注，false-未关注）
	HasPlan             *int64        `gorm:"column:hasPlan;type:tinyint;comment:是否有方案（进行中跟未开始）" json:"hasPlan" db:"hasPlan"`                                                                                      // 是否有方案（进行中跟未开始）
	Top                 *int64        `gorm:"column:top;type:tinyint;comment:置顶" json:"top" db:"top"`                                                                                                              // 置顶
	Menu                *int64        `gorm:"column:menu;type:int;comment:体育专用" json:"menu" db:"menu"`                                                                                                             // 体育专用
	AnimationURL        *string       `gorm:"column:animationUrl;type:varchar(512);comment:动画直播地址（体育专用）" json:"animationUrl" db:"animationUrl"`                                                                    // 动画直播地址（体育专用）
	HomeThreePointGoals *int64        `gorm:"column:homeThreePointGoals;type:int;comment:home三分球（体育专用）" json:"homeThreePointGoals" db:"homeThreePointGoals"`                                                       // home三分球（体育专用）
	AwayThreePointGoals *int64        `gorm:"column:awayThreePointGoals;type:int;comment:away三分球（体育专用）" json:"awayThreePointGoals" db:"awayThreePointGoals"`                                                       // away三分球（体育专用）
	HomeCornerKick      *int64        `gorm:"column:homeCornerKick;type:int;comment:home角球（体育专用）" json:"homeCornerKick" db:"homeCornerKick"`                                                                       // home角球（体育专用）
	AwayCornerKick      *int64        `gorm:"column:awayCornerKick;type:int;comment:away角球（体育专用）" json:"awayCornerKick" db:"awayCornerKick"`                                                                       // away角球（体育专用）
	HomeYellowCard      *int64        `gorm:"column:homeYellowCard;type:int;comment:home黄牌（体育专用）" json:"homeYellowCard" db:"homeYellowCard"`                                                                       // home黄牌（体育专用）
	HomeRedCard         *int64        `gorm:"column:homeRedCard;type:int;comment:home红牌（体育专用）" json:"homeRedCard" db:"homeRedCard"`                                                                                // home红牌（体育专用）
	AwayYellowCard      *int64        `gorm:"column:awayYellowCard;type:int;comment:away黄牌（体育专用）" json:"awayYellowCard" db:"awayYellowCard"`                                                                       // away黄牌（体育专用）
	AwayRedCard         *int64        `gorm:"column:awayRedCard;type:int;comment:away红牌（体育专用）" json:"awayRedCard" db:"awayRedCard"`                                                                                // away红牌（体育专用）
	AwayFirstHalfScore  *int64        `gorm:"column:awayFirstHalfScore;type:int;comment:away上半场得分（体育专用）" json:"awayFirstHalfScore" db:"awayFirstHalfScore"`                                                        // away上半场得分（体育专用）
	HomeFirstHalfScore  *int64        `gorm:"column:homeFirstHalfScore;type:int;comment:home上半场得分（体育专用）" json:"homeFirstHalfScore" db:"homeFirstHalfScore"`                                                        // home上半场得分（体育专用）
	IconType            *int64        `gorm:"column:iconType;type:tinyint;comment:0：比赛前瞻 1：主播解说 2：视频直播 3：动画直播" json:"iconType" db:"iconType"`                                                                      // 0：比赛前瞻 1：主播解说 2：视频直播 3：动画直播
	LiveUrls            *string       `gorm:"column:liveUrls;type:text;comment:直播地址集合" json:"liveUrls" db:"liveUrls"`                                                                                              // 直播地址集合
	IsLive              *int64        `gorm:"column:isLive;type:tinyint;index:live_matches_isLive_index,priority:1;comment:是否有直播" json:"isLive" db:"isLive"`                                                       // 是否有直播
	LiveImage           *string       `gorm:"column:liveImage;type:varchar(500);comment:直播封面图" json:"liveImage" db:"liveImage"`                                                                                    // 直播封面图
	AwayGoldsDiff       *int64        `gorm:"column:awayGoldsDiff;type:int;comment:客队金币差（PC字段）" json:"awayGoldsDiff" db:"awayGoldsDiff"`                                                                           // 客队金币差（PC字段）
	HomeGoldsDiff       *int64        `gorm:"column:homeGoldsDiff;type:int;comment:主队金币差（PC字段）" json:"homeGoldsDiff" db:"homeGoldsDiff"`                                                                           // 主队金币差（PC字段）
	WinTeamIDList       *string       `gorm:"column:winTeamIdList;type:text;comment:胜利队伍Id集合（PC字段）" json:"winTeamIdList" db:"winTeamIdList"`                                                                       // 胜利队伍Id集合（PC字段）
	GameAbbr            *string       `gorm:"column:gameAbbr;type:varchar(255);comment:游戏简称（PC字段）" json:"gameAbbr" db:"gameAbbr"`                                                                                  // 游戏简称（PC字段）
	AnchorRoomVos       *string       `gorm:"column:anchorRoomVos;type:text;comment:比赛主播信息列表" json:"anchorRoomVos" db:"anchorRoomVos"`                                                                             // 比赛主播信息列表
	StageName           *string       `gorm:"column:stageName;type:varchar(255);comment:阶段" json:"stageName" db:"stageName"`                                                                                       // 阶段
	ViewStyle           *string       `gorm:"column:viewStyle;type:varchar(255);comment:直播限制" json:"viewStyle" db:"viewStyle"`                                                                                     // 直播限制
	CreatedAt           *sql.NullTime `gorm:"column:created_at;type:bigint;autoCreateTime:milli" json:"created_at" db:"created_at"`
	UpdatedAt           *sql.NullTime `gorm:"column:updated_at;type:bigint;autoUpdateTime:milli" json:"updated_at" db:"updated_at"`
}

// TableName LiveMatch's table name
func (*LiveMatch) TableName() string {
	return TableNameLiveMatch
}
