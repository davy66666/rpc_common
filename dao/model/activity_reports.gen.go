// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import "database/sql"

const TableNameActivityReport = "activity_reports"

// ActivityReport 统计报表
type ActivityReport struct {
	ID               int64         `gorm:"column:id;type:bigint unsigned;primaryKey;autoIncrement:true" json:"id" db:"id"`
	UserID           int64         `gorm:"column:user_id;type:int unsigned;not null;uniqueIndex:activity_reports_user_id_unique,priority:1;default:0;comment:队长id" json:"user_id" db:"user_id"` // 队长id
	TotalWinTimes    int64         `gorm:"column:total_win_times;type:int unsigned;not null;default:0;comment:猜赢次数" json:"total_win_times" db:"total_win_times"`                                // 猜赢次数
	TotalCoefficient float64       `gorm:"column:total_coefficient;type:decimal(6,5);not null;default:0.00000;comment:竞猜系数" json:"total_coefficient" db:"total_coefficient"`                    // 竞猜系数
	TotalDeposit     float64       `gorm:"column:total_deposit;type:decimal(12,2);not null;default:0.00;comment:团队存款" json:"total_deposit" db:"total_deposit"`                                  // 团队存款
	TotalReward      float64       `gorm:"column:total_reward;type:decimal(12,2);not null;default:0.00;comment:团队奖励" json:"total_reward" db:"total_reward"`                                     // 团队奖励
	MatchEventSum    *string       `gorm:"column:match_event_sum;type:text;comment:分组竞猜统计" json:"match_event_sum" db:"match_event_sum"`                                                         // 分组竞猜统计
	CreatedAt        *sql.NullTime `gorm:"column:created_at;type:bigint;autoCreateTime:milli" json:"created_at" db:"created_at"`
	UpdatedAt        *sql.NullTime `gorm:"column:updated_at;type:bigint;autoUpdateTime:milli" json:"updated_at" db:"updated_at"`
}

// TableName ActivityReport's table name
func (*ActivityReport) TableName() string {
	return TableNameActivityReport
}
